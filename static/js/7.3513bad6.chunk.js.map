{"version":3,"sources":["services/auth.service.js","assets/img/square-purple-1.png","../node_modules/reactstrap/es/Spinner.js","components/Login.js"],"names":["API_URL","register","firstname","lastname","username","password","axios","post","login","then","response","data","token","localStorage","setItem","JSON","stringify","logout","removeItem","module","exports","propTypes","tag","tagPropType","type","PropTypes","string","size","color","className","cssModule","object","children","Spinner","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","role","defaultProps","Login","useState","squares1to6","setSquares1to6","squares7and8","setSquares7and8","loading","setLoading","usernameFocus","setUsernameFocus","passwordFocus","setPasswordFocus","setUsername","setPassword","message","setMessage","useEffect","document","body","classList","toggle","documentElement","addEventListener","e","followCursor","removeEventListener","event","posX","clientX","window","innerWidth","posY","clientY","console","log","Container","Row","Col","lg","md","id","style","transform","Card","CardHeader","CardImg","alt","src","require","CardTitle","CardBody","Form","onSubmit","preventDefault","AuthService","history","push","location","reload","error","resMessage","toString","InputGroup","classnames","InputGroupAddon","addonType","InputGroupText","Input","placeholder","value","onChange","target","required","onFocus","onBlur","CardFooter","Button","Alert","severity"],"mappings":"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","file":"static/js/7.3513bad6.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"https://ashima-accounting-node.herokuapp.com/auth/\";\r\n\r\nconst register = (firstname, lastname, username, password) => {\r\n  return axios.post(API_URL + \"signup\", {\r\n    firstname,\r\n    lastname,\r\n    username,\r\n    password,\r\n  });\r\n};\r\n\r\nconst login = (username, password) => {\r\n  return axios\r\n    .post(API_URL + \"login\", {\r\n      username,\r\n      password,\r\n    })\r\n    .then((response) => {\r\n      if (response.data.token) {\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n      }\r\n      return response.data;\r\n    });\r\n};\r\n\r\nconst logout = () => {\r\n  localStorage.removeItem(\"user\");\r\n};\r\n\r\n// const getCurrentUser = () => {\r\n//   return JSON.parse(localStorage.getItem(\"user\"));\r\n// };\r\n\r\nexport default {\r\n  register,\r\n  login,\r\n  logout,\r\n  //getCurrentUser,\r\n};","module.exports = __webpack_public_path__ + \"static/media/square-purple-1.79c1998f.png\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  type: PropTypes.string,\n  size: PropTypes.string,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.string\n};\nvar defaultProps = {\n  tag: 'div',\n  type: 'border',\n  children: 'Loading...'\n};\n\nvar Spinner = function Spinner(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      type = props.type,\n      size = props.size,\n      color = props.color,\n      children = props.children,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"type\", \"size\", \"color\", \"children\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, size ? \"spinner-\" + type + \"-\" + size : false, \"spinner-\" + type, color ? \"text-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({\n    role: \"status\"\n  }, attributes, {\n    className: classes\n  }), children && React.createElement(\"span\", {\n    className: mapToCssModules('sr-only', cssModule)\n  }, children));\n};\n\nSpinner.propTypes = propTypes;\nSpinner.defaultProps = defaultProps;\nexport default Spinner;","import React, { useState, useEffect } from \"react\";\r\nimport classnames from \"classnames\";\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardFooter,\r\n  CardImg,\r\n  CardTitle,\r\n  Form,\r\n  Input,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  InputGroup,\r\n  Container,\r\n  Row,\r\n  Alert,\r\n  Spinner,\r\n  Col\r\n} from \"reactstrap\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nfunction Login(props) {\r\n  const [squares1to6, setSquares1to6] = useState(\"\");\r\n  const [squares7and8, setSquares7and8] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [usernameFocus, setUsernameFocus] = useState(false);\r\n  const [passwordFocus, setPasswordFocus] = useState(false);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    document.body.classList.toggle(\"register-page\");\r\n    document.documentElement.addEventListener(\"mousemove\", (e) => followCursor(e));\r\n    document.body.classList.toggle(\"register-page\");\r\n    document.documentElement.removeEventListener(\r\n      \"mousemove\",\r\n      (e) => followCursor(e));\r\n  }, [squares1to6, squares7and8]);\r\n\r\n  const followCursor = (event) => {\r\n    let posX = event.clientX - window.innerWidth / 2;\r\n    let posY = event.clientY - window.innerWidth / 6;\r\n    setSquares1to6(\r\n      \"perspective(500px) rotateY(\" +\r\n      posX * 0.05 +\r\n      \"deg) rotateX(\" +\r\n      posY * -0.05 +\r\n      \"deg)\"\r\n    );\r\n    setSquares7and8(\"perspective(500px) rotateY(\" +\r\n      posX * 0.02 +\r\n      \"deg) rotateX(\" +\r\n      posY * -0.02 +\r\n      \"deg)\");\r\n  };\r\n\r\n  const onChangeUsername = (e) => {\r\n    const username = e.target.value;\r\n    setUsername(username);\r\n  };\r\n  const onChangePassword = (e) => {\r\n    const password = e.target.value;\r\n    setPassword(password);\r\n  };\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    setMessage(\"\");\r\n    setLoading(true);\r\n\r\n    AuthService.login(username, password).then(\r\n      () => {\r\n        props.history.push(\"/companylist\");\r\n        window.location.reload();\r\n      },\r\n      (error) => {\r\n        const resMessage =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n\r\n        setLoading(false);\r\n        setMessage(resMessage);\r\n      }\r\n    );\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      {console.log(squares1to6)}\r\n      <div className=\"wrapper register-page\">\r\n        <div className=\"page-header\">\r\n          <div className=\"page-header-image\" />\r\n          <div className=\"content\">\r\n            <Container>\r\n              <Row>\r\n                <Col className=\"offset-lg-0 offset-md-3\" lg=\"5\" md=\"6\">\r\n                  <div\r\n                    className=\"square square-7\"\r\n                    id=\"square7\"\r\n                    style={{ transform: squares7and8 }}\r\n                  />\r\n                  <div\r\n                    className=\"square square-8\"\r\n                    id=\"square8\"\r\n                    style={{ transform: squares7and8 }}\r\n                  />\r\n                  <Card className=\"card-register\">\r\n                    <CardHeader>\r\n                      <CardImg\r\n                        alt=\"...\"\r\n                        src={require(\"../assets/img/square-purple-1.png\")}\r\n                      />\r\n                      <CardTitle tag=\"h4\">Sign In</CardTitle>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                      <Form onSubmit={handleLogin} className=\"form\">\r\n                        <InputGroup\r\n                          className={classnames({\r\n                            \"input-group-focus\": usernameFocus\r\n                          })}\r\n                        >\r\n                          <InputGroupAddon addonType=\"prepend\">\r\n                            <InputGroupText>\r\n                              <i className=\"tim-icons icon-key-25\" />\r\n                            </InputGroupText>\r\n                          </InputGroupAddon>\r\n                          <Input\r\n                            placeholder=\"username\"\r\n                            type=\"text\"\r\n                            value={username}\r\n                            onChange={onChangeUsername}\r\n                            required={true}\r\n                            onFocus={e => setUsernameFocus(true)}\r\n                            onBlur={e => setUsernameFocus(false)}\r\n                          />\r\n                        </InputGroup>\r\n                        <InputGroup\r\n                          className={classnames({\r\n                            \"input-group-focus\": passwordFocus\r\n                          })}\r\n                        >\r\n                          <InputGroupAddon addonType=\"prepend\">\r\n                            <InputGroupText>\r\n                              <i className=\"tim-icons icon-lock-circle\" />\r\n                            </InputGroupText>\r\n                          </InputGroupAddon>\r\n                          <Input\r\n                            placeholder=\"Password\"\r\n                            type=\"password\"\r\n                            value={password}\r\n                            onChange={onChangePassword}\r\n                            required={true}\r\n                            onFocus={e =>\r\n                              setPasswordFocus(true)\r\n                            }\r\n                            onBlur={e =>\r\n                              setPasswordFocus(false)\r\n                            }\r\n                          />\r\n                        </InputGroup>\r\n                        <CardFooter>\r\n                          <Button type=\"submit\" className=\"btn-round\" color=\"primary\" size=\"lg\">\r\n                            {loading && (\r\n                              <Spinner color=\"dark\" />\r\n\r\n                            )}\r\n                            Sign in\r\n                        </Button>\r\n                        </CardFooter>\r\n                      </Form>\r\n                      {message && (\r\n                        <Alert severity=\"error\">{message}</Alert>\r\n                      )}\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              </Row>\r\n              <div className=\"register-bg\" />\r\n              <div\r\n                className=\"square square-1\"\r\n                id=\"square1\"\r\n                style={{ transform: squares1to6 }}\r\n              />\r\n              <div\r\n                className=\"square square-2\"\r\n                id=\"square2\"\r\n                style={{ transform: squares1to6 }}\r\n              />\r\n              <div\r\n                className=\"square square-3\"\r\n                id=\"square3\"\r\n                style={{ transform: squares1to6 }}\r\n              />\r\n              <div\r\n                className=\"square square-4\"\r\n                id=\"square4\"\r\n                style={{ transform: squares1to6 }}\r\n              />\r\n              <div\r\n                className=\"square square-5\"\r\n                id=\"square5\"\r\n                style={{ transform: squares1to6 }}\r\n              />\r\n              <div\r\n                className=\"square square-6\"\r\n                id=\"square6\"\r\n                style={{ transform: squares1to6 }}\r\n              />\r\n            </Container>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default Login;\r\n"],"sourceRoot":""}